______________________________________________________________________

layout: single
title:  "k8s Study"
date:   2023-10-14 15:30:09 +0900
categories: k8s
toc: true
toc_sticky: true

______________________________________________________________________

# K8s 주요기능

- 여러 서버에서 container 관리
- 컨테이너간 네트워크 관리
- 컨테이너 감시/업데이트/자동복구/배포/부하 분산

온프레미스에서 어려운 서버 구축이라든지, 변경 이력 관리 등이 의미없어지고, 단순히 선언적으로 인프라 상태만 관리하면 됨. 이를 Immutable Infrastructure 라고 함. 이 상태만 있으면 언제든지 서버를 새로 구축할 수 있음.
또 이런 상태를 선언적 설정이라고 함.
자동 복구 기능은 쿠버네티스가 어플리케이션 상태를 항상 감시해서 이상있으면 미리 시스템의 본래 모습으로 설정되도록 재시작시키거나 클러스터 장애를 제거하여 복구함.

# Azure System

- Resource group: A resource group is a container that holds related resources for an Azure solution. 논리적 단위기 때문에 물리적으로 다른 리전에 있거나 물리적 리소스가 아닌 것(ACR service)을 포함하는 것이 가능함.
  https://learn.microsoft.com/en-us/azure/azure-resource-manager/management/manage-resource-groups-portal

# Terms

- region: 실은 cloud network 용어로 클라우드 리소스가 존재하는 실제 location. ex) 서울 중부는 koreacentral
- IAM(Identity and Access Management)
- RBAC(Role-Based Access Control) : IAM 의 일종. 누가(subject) 어디서(where) 무엇(verb)을 실행할 수 있는지 기술.
- ACR(Azure Container Registry):도커 이미지를 들고 있는 서비스를 레지스트리(docker hub 처럼) 라고 하는데 이에 대한 azure service.  docker hub 에 하지 않는 이유는 사설로서 외부에 공개하지 않기 위함.
- Service Principal: Azure Active Directory 서비스. Azure 의 리소스를 조작하는 application 을 위한 Id..
- Scheduling : 어플리케이션을 적절한 곳에 디플로이 하는 장치
- Service Discovery : web application 의 경우에 request 를 받은 frontend application on server 는 backend service 를 호출하게 되는데, 이 어플리케이션이 어딨는지 찾아내는 장치를 말함.
- OSS(Object Storage Service) :
- Service Mesh : 어플리케이션의 서비스 간의 모든 통신을 다루는 소프트웨어 레이어. 성능 모니터가 가능함.  [참조](https://aws.amazon.com/what-is/service-mesh/?nc1=h_ls)

# K8s Components

- Pod :  여러 컨테이너들의 집합. pod 안의 컨테이너들은 가상NIC 을 공유하기때문에 localhost 를 경유해서 통신이 가능함. 또, 디렉토리도 공유 가능함. pod 가 디플로이의 단위가 되며 pod 가 같으면 같은 node 에 디플로이됨.
- ReplicaSet : 클러스터 안에서 지정된 수의 pod 를 기동시켜두는 장치. 항상 필요한 수만큼의 pod 가 기동되어있도록 하는 장치임.
- Deployment : 어플리케이션 배포 단위를 관리하는 것.
- DaemonSet : log collecter 나 감시 에이전트처럼 반드시 각 노드에 하나씩 작동시키고싶은 경우 사용하는 것.
- StatefulSet : container application 은 기본적으로 stateless 임. 리플리카셋은 이름 Ip 등이 랜덤 할당되는데 db 처럼 영구 데이터와 연계되는 경우 상태를 유지해야함. 그런 application을 실행하기 위한 resource 가 StatefulSet .
- Service : k8s 안에서 실행된 pod 에 대해 접근할 때는 service 를 정의함. service 는 k8s 네트워크를 관리하는 것으로 몇 가지 종류가 있는데, load balancer 는 l4 level 부하 분산을 수행함.
- Ingress : cluseter 외부의 네트워크로부터 액세스를 받기 위한 object. http/https 의 endpoint. l7 의 기능 제공.
- ConfigMap : 어플리케이션이 공통으로 이용하는 환경변수 등을 container 안에 넣게되면 이 값이 변경될 때마다 이미지를 새로 빌드해야하는 귀찮음이 있음. 이것조차 설정으로 돌릴 수 있는 장치임.
- Secrets : 컨피그맵처럼 구성정보를 container application 에 전달하기 위한 것. db 연결할 때의 비번이나 OAuth token 같은 기밀성 높은 정보 관리.
